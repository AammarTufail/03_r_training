# install.packages("readr")
library(readr)
?readr
library(readr)
df <- read_csv("data/titanic.csv")
View(df)
library(readr)
df <- read_csv("data/titanic.csv")
View(df)
df <- read_csv("data/titanic.csv")
View(df)
View(df)
View(df)
## 2. readxl----
# install.packages("readxl") # comment in to installl the package
library(readxl)
df <- read_excel("data/titanic.xlsx", sheet = 1)
View(df)
View(df)
df1 <- read_excel("data/titanic.xlsx", sheet = 1)
View(df1)
df1 <- read_excel("data/BOD.xlsx", sheet = 1)
View(df1)
df <- read_excel("data/BOD.xlsx", sheet = 1)
df <- read_excel("data/BOD.xlsx", sheet = 2)
View(df)
df <- read_excel("data/BOD.xlsx", sheet = "bod")
df <- read_excel("data/BOD.xlsx", sheet = "iris")
df <- read_excel("data/BOD.xlsx", sheet = 1)
df <- read_excel("data/BOD.xlsx", sheet = 1)
View(df)
df <- read_excel("data/BOD.xlsx", sheet = "bod")
View(df)
## 3. writexl -----
# install.packages("writexl") # comment in to installl the package
library(writexl)
# save tsv file from df
write_csv(df, "data/BOD_test.tsv", delim = "\t")
# save tsv file from df
write_csv(df, "data/BOD_test.tsv")
write_csv(df, "data/BOD_test.csv")
write_tsv(df, "data/BOD_test.tsv")
## 3. writexl -----
# install.packages("writexl") # comment in to installl the package
write_xlsx(df, "data/BOD_test.xlsx")
## 4. Openxlsx ----
# install.packages("openxlsx") # comment in to installl the package
library(openxlsx)
remove.packages("openxlsx")
## 4. Openxlsx ----
# install.packages("openxlsx") # comment in to installl the package
library(openxlsx)
## 4. Openxlsx ----
# install.packages("openxlsx") # comment in to installl the package
library(openxlsx)
## 4. Openxlsx ----
install.packages("openxlsx", dependencies = TRUE)
## 4. Openxlsx ----
install.packages("openxlsx", dependencies = TRUE)
## 4. Openxlsx ----
# install.packages("openxlsx", dependencies = TRUE)
library(openxlsx)
?openxlsx
library(shiny); runApp('shiny_app_data_Extraction.R')
## 1. Packages needed for this ----
library(tidyverse)
library(readxl)
## 2. Load data ----
df <- read_excel("data/titanic.xlsx")
View(df)
View(data)
View(df)
## 3. Data Understanding ----
View(df)
tibble(df)
str(df)
summary(df)
summarise(df)
glimpses(df)
glimpse(df)
df %>% glimpse()
# summarise the df data
df %>% summarise_all(mean, na.rm = TRUE)
# summarise the df data
df %>% summarise_all(mean)
View(df)
# summarise the df data
df %>% summarise(avg = mean(age))
# summarise the df data
df %>% summarise(avg = mean(df$age))
# summarise the df data
df %>% summarise(avg = mean(df))
df %>%
group_by(Age) %>%
summarise(mean = mean(Age, na.rm = TRUE))
df %>%
group_by(age) %>%
summarise(mean = mean(age, na.rm = TRUE))
View(df)
# select only female from sex column in df
df %>%
filter(sex=="female")
# select only female from sex column in df
df_female <- df %>% filter(sex=="female")
View(df_female)
df_male <- df %>% filter(sex=="male")
View(df_male)
df %>%
filter(sex=="female") %>%
ggplot(aes(x = fare)) + geom_histogram(binwidth = 10, fill = "blue", color = "black") +
df %>%
filter(sex=="female") %>%
ggplot(aes(x = fare)) + geom_histogram(binwidth = 10, fill = "blue", color = "black")
df %>%
filter(sex=="female") %>%
ggplot(aes(x = fare)) + geom_histogram()
df %>%
filter(sex=="male") %>%
ggplot(aes(x = fare)) + geom_histogram()
df %>%
filter(sex=="male") %>%
filter(fare > 100) %>%
ggplot(aes(x = fare)) + geom_histogram()
df %>%
filter(sex=="male") %>%
filter(fare < 10) %>%
ggplot(aes(x = fare)) + geom_histogram()
df %>%
filter(sex=="male") %>%
# filter(fare < 10) %>%
filter(age < 10) %>%
ggplot(aes(x = fare)) + geom_histogram()
df %>%
filter(sex=="male") %>%
filter(fare < 10) %>%
filter(age < 10) %>%
ggplot(aes(x = fare, y = age)) + geom_point()
df %>%
filter(sex=="male") %>%
# filter(fare < 10) %>%
# filter(age < 10) %>%
ggplot(aes(x = fare, y = age)) + geom_point()
View(df)
df %>%
filter(sex=="male") %>%
# filter(fare < 10) %>%
# filter(age < 10) %>%
ggplot(aes(x = fare, y = age, colour = class)) + geom_point()
df %>%
filter(sex=="male") %>%
# filter(fare < 10) %>%
# filter(age < 10) %>%
ggplot(aes(y = fare, x = age, colour = class)) + geom_point()
# find number of missing values in each column of df
colSums(is.na(df))
# df %>% is.na() %>% barplot() # takes a lot of mem
df %>%  is.na() %>% colSums() %>% barplot
## 1. Packages ----
library(tidyverse)
## 1. Packages ----
library(tidyverse)
# install.packages("nycflights13")
library(nycflights13)
flights
df <- flights
# df %>% is.na() %>% barplot() # takes a lot of mem
df %>%  is.na() %>% colSums() %>% barplot()
# df %>% is.na() %>% barplot() # takes a lot of memory
df %>%  is.na() %>% colSums() %>% barplot() %>%
# save the plot
dev.copy(png, "output/figures/missing_values_plot.png")
# df %>% is.na() %>% barplot() # takes a lot of memory
df %>%  is.na() %>% colSums() %>% barplot()
df %>%  is.na() %>% colSums() %>%  write.csv("data/missing_values.csv")
## 1. library packages
library(tidyverse)
library(readxl)
## 2. Import dataset ----
df <- read_excel("data/titanic.xlsx")
View(df)
## 3. Fiund Missing Values ----
df %>% is.na() %>% colSums()
## 3. Find Missing Values ----
df %>% is.na() %>% colSums() %>% barplot()
%>% ggplot(aes(x = key, y = value)) + geom_bar(stat = "identity") + coord_flip() + theme_minimal() + labs(title = "Percentage of missing values in each column", x = "Column", y = "Percentage")
%>% gather() %>% ggplot(aes(x = key, y = value)) + geom_bar(stat = "identity") + coord_flip() + theme_minimal() + labs(title = "Percentage of missing values in each column", x = "Column", y = "Percentage")
## percentage of missing values in each column
df %>% summarise_all(~sum(is.na(.))/n())
## percentage of missing values in each column
df %>% summarise_all(~sum(is.na(.))/n()) %>% gather() %>% ggplot(aes(x = key, y = value)) + geom_bar(stat = "identity") + coord_flip() + theme_minimal() + labs(title = "Percentage of missing values in each column", x = "Column", y = "Percentage")
?summarise_all
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n())
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n())
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n())
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n()) %>%
write.csv("data/missing_values.csv")
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n())
## percentage of missing values in each column
df %>%
summarise_all(~sum(is.na(.))/n()) %>%
gather() %>%
ggplot(aes(x = key, y = value)) + geom_col()
df %>%
drop_na() %>%
is.na() %>%
colSums() %>%
barplot()
df_clean_1 <- df %>% drop_na()
df_clean_2 <- df %>% select(-deck)
View(df_clean_2)
# remove rows with missing values in embarked
df_clean_3 <- df %>% drop_na(embarked)
# remove rows with missing values in embarked
df_clean_3 <- df_clean_2 %>% drop_na(embarked)
# removed deck column
#removed rows with missing values in embarked
df_clean_4 %>% df %>% drop_na(embarked) %>% select(-deck)
# removed deck column
#removed rows with missing values in embarked
df_clean_4 <- df %>% drop_na(embarked) %>% select(-deck)
View(df_clean_4)
# impute missing values of age and replace them with mean of age
df_clean_5 <- df_clean_4 %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
# let's check if we still have missing values
df_clean_5 %>% is.na() %>% colSums() %>% barplot()
# let's check if we still have missing values
df_clean_5 %>% is.na() %>% colSums() %>% barplot()
# let's check if we still have missing values
df_clean_5 %>% is.na() %>% colSums()
df_clean_final <- df %>%
select(-deck) %>%
drop_na(embarked) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse(is.na(embarked_town), mode(embarked_town, na.rm = TRUE), embarked_town)) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse(is.na(embarked_town), mode(embarked_town, na.rm = TRUE), embarked_town)) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
mode(df$embarked, na.rm = TRUE)
mode(df$embarked)
install.packages("DescTools")
library(DescTools)
Mode(df$embarked)
Mode(df$embarked, na.rm = TRUE)
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse(is.na(embarked_town), Mode(embarked_town, na.rm = TRUE), embarked_town)) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse(is.na(embarked_town), Mode(embarked_town, na.rm = TRUE), embarked_town)) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
Mode(df$embarked, na.rm = TRUE)
Mode(df$embarked_town, na.rm = TRUE)
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), "S", embarked),
embarked_town = ifelse(is.na(embarked_town), "Southampton", na.rm = TRUE), embarked_town)) %>%
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked), "S", embarked),
embarked_town = ifelse(is.na(embarked_town), "Southampton", na.rm = TRUE), embarked_town) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age))
Mode(df$embarked_town)
Mode(df$embarked, na.rm = TRUE)
Mode(df$embarked_town, na.rm = TRUE)
install.packages("mice")
library(mice)
?mice
# impute missing values using mice
df_imputed <- mice(df, m = 5, maxit = 50, method = "pmm", seed = 500)
View(df_imputed)
mode(df$embarked)
mode(df$embarked, na.rm = TRUE)
Mode(df$embarked)
Mode(df$embarked, na.rm = TRUE)
Mode(df$embarked_town, na.rm = TRUE)
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked) | embarked = "", "S", embarked),
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(embarked = ifelse(is.na(embarked) | embarked = "", "S", embarked),
embarked_town = ifelse(is.na(embarked_town), Mode(embarked_town, na.rm = TRUE), embarked_town)
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse(is.na(embarked), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse(is.na(embarked_town), Mode(embarked_town, na.rm = TRUE), embarked_town))
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse(is.na(embarked) | embarked = "", Mode(embarked, na.rm = TRUE), embarked),
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked = ""), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse((is.na(embarked_town) | embarked_town = ""), Mode(embarked_town, na.rm = TRUE), embarked_town))
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked == ""), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse((is.na(embarked_town) | embarked_town == ""), Mode(embarked_town, na.rm = TRUE), embarked_town))
Mode(df$embarked, na.rm = TRUE)
Mode(df$embarked_town, na.rm = TRUE)
class(df$embarked)
class(df$embarked_town)
View(df)
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked == ""), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse((is.na(embark_town) | embark_town == ""), Mode(embarked_town, na.rm = TRUE), embarked_town))
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked == ""), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse((is.na(embark_town) | embark_town == ""), Mode(embarked_town, na.rm = TRUE), embark_town))
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked == ""), Mode(embarked, na.rm = TRUE), embarked),
embarked_town = ifelse((is.na(embark_town) | embark_town == ""), Mode(embark_town, na.rm = TRUE), embark_town))
Mode(df$embark_town, na.rm = TRUE)
Mode(df$embarked, na.rm = TRUE)
View(df)
Mode(df$embarked, na.rm = TRUE)
Mode(df$embark_town, na.rm = TRUE)
Mode(df$embarked)
## Impute and replace embarked and embarked_town with mode
df_clean_final <- df %>%
select(-deck) %>%
mutate(age = ifelse(is.na(age), mean(age, na.rm = TRUE), age),
embarked = ifelse((is.na(embarked) | embarked == ""), Mode(embarked, na.rm = TRUE), embarked),
embark_town = ifelse((is.na(embark_town) | embark_town == ""), Mode(embark_town, na.rm = TRUE), embark_town))
df_clean_final %>% is.na() %>% colSums()
# library packages -----
library(tidyverse)
df <- read_excel("data/titanic.xlsx")
library(readxl)
df <- read_excel("data/titanic.xlsx")
View(df)
# draw a histogram
hist(df$age)
# draw a histogram
hist(df$age, bins=20)
# draw a histogram
hist(df$age, bin=20)
# draw a histogram with ggplot2 having 10 bins
ggplot(df, aes(x = age)) + geom_histogram(bins = 10)
# draw a histogram with ggplot2 having 10 bins
ggplot(df, aes(x = age)) + geom_histogram(bins = 10) +
theme_bw()
# draw a histogram with ggplot2 having 10 bins
ggplot(df, aes(x = age)) + geom_histogram(bins = 10) +
theme_classic()
# draw a histogram with ggplot2 having 10 bins
ggplot(df, aes(x = age)) + geom_histogram(bins = 20) +
theme_classic()
mean(df$age, na.rm = TRUE)
median(df$age, na.rm = TRUE)
mean(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34)
B <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34, 100)
mean(A)
median(A)
mean(B)
median(B)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34)
mean(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34,100)
mean(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34,100,500)
mean(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34)
median(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34,100)
median(A)
A <- c(2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 34,100,500)
median(A)
## Data Distributions ------
# Normal Distribution
x <- seq(-4, 4, length = 100)
hist(x)
y <- dnorm(x, mean = 0, sd = 1)
hist(y)
y <- dnorm(x, mean = 0, sd = 1)
hist(y)
## Data Distributions ------
# Normal Distribution
hist(df$age)
shapiro.test(df$age)
hist(df$fare)
shapiro.test(df$fare)
ggplot(df, aes(x = age)) + geom_histogram(bins = 50)
ggplot(df, aes(x = fare)) + geom_histogram(bins = 50)
x <- df$age
if (shapiro.test(x)$p.value > 0.05) {
print("Data is normally distributed")
} else {
print("Data is not normally distributed")
}
# density plot of age
ggplot(df, aes(x = age)) + geom_density()
# density plot of age
ggplot(df, aes(x = age)) + geom_density() + theme_classic()
# density plot of age
ggplot(df, aes(x = fare)) + geom_density() + theme_classic()
# Why can't we do the same with categorical data
ggplot(df, aes(x = sex)) + geom_density() + theme_classic()
# Why can't we do the same with categorical data
ggplot(df, aes(x = pclass)) + geom_density() + theme_classic()
# Why can't we do the same with categorical data
ggplot(df, aes(x = class)) + geom_density() + theme_classic()
# Why can't we do the same with categorical data
ggplot(df, aes(x = class)) + geom_histogram() + theme_classic()
hist(df$class)
plot(df$class)
boxplot(df$age)
boxplot(df$age~df$class)
# count plot of class using ggplot2
ggplot(df, aes(x = class)) + geom_bar() + theme_classic()
# count plot of class using ggplot2
ggplot(df, aes(x = class)) + geom_bar()
ggplot(df, aes(x = class, y = age)) + geom_bar()
ggplot(df, aes(x = class, y = age)) + geom_bar(stat = "identity")
?geom_bar
ggplot(df, aes(x = class, y = age)) + geom_bar(stat = "count")
ggplot(df, aes(x = class, y = age)) + geom_bar(stat = "identity")
# calculate mean and SD of age and then make a plot with sex
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE))
df %>%
filter(sex == "male") %>%
ggplot(aes(x = age)) + geom_histogram(bins = 50) + theme_classic()
df %>%
filter(sex == "female") %>%
ggplot(aes(x = age)) + geom_histogram(bins = 50) + theme_classic()
# calculate mean and SD of age and then make a plot with sex
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE))
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE)) %>%
ggplot(mean_age, sex) + geom_bar(stat = "identity") + theme_classic()
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE)) %>%
ggplot(sex) + geom_bar(stat = "identity") + theme_classic()
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE)) %>%
ggplot(sex) + geom_bar()
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE)) %>%
ggplot(age) + geom_bar()
df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE)) %>%
ggplot(x = mean_age, y = sd_age) + geom_point() + theme_classic()
means <-  df %>%
group_by(sex) %>%
summarise(mean_age = mean(age, na.rm = TRUE), sd_age = sd(age, na.rm = TRUE))
View(means)
ggplot(means, aes(x = sex, y = mean_age)) + geom_bar(stat = "identity") + theme_classic()
kurtosis(df$age, na.rm = TRUE)
skewness(df$age, na.rm = TRUE)
# find kurtosis of age
install.packages("moments")
library(moments)
kurtosis(df$age, na.rm = TRUE)
skewness(df$age, na.rm = TRUE)
library(moments)
kurtosis(df$age, na.rm = TRUE)
skewness(df$age, na.rm = TRUE)
View(means)
#fare
kurtosis(df$fare, na.rm = TRUE)
skewness(df$fare, na.rm = TRUE)
