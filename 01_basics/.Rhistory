#19
mean(df$age) # to see the mean of the age column
#20
meadian(df$age, na.rm = TRUE) # to see the median of the age column
#20
median(df$age, na.rm = TRUE) # to see the median of the age column
#21
sd(df$age, na.rm = TRUE) # to see the standard deviation of the age column
se <- sd(df$age, na.rm = TRUE)/sqrt(nrow(df)) # to see the standard error of the age column
#22
quantile(df$age, na.rm = TRUE) # to see the quantiles of the age column
# inter quartile range
IQR(df$age, na.rm = TRUE)
#23
range(df$age, na.rm = TRUE) # to see the range of the age column
#24
table(df$pclass) # to see the frequency of each class in the pclass column
### Categorical Variables frequencies
#24
table(df$class) # to see the frequency of each class in the pclass column
table(df$sex) # to see the frequency
table(df$who)
#25
length(df) # to see the length of the dataframe
length(df$sex)
length(unique(df$sex)) # to see the number of unique values in sex
length(unique(df$class)) # to see the number of unique values in
length(unique(df$age))
length(unique(df$embarked))
table(df$embarked) # to see the frequency
#27
prop.table(table(df$class)) # to see the proportion of each class in the class column
# find percentage of each class
prop.table(table(df$class))*100
#28
cor(df$age, df$fare) # to see the correlation between age and fare
#28
cor(df$age, df$fare, na.rm = TRUE) # to see the correlation between age and fare
#28
cor(df$age, df$fare, use = "complete.obs") # to see the correlation between age and fare
#29
hist(df$age) # to see the histogram of the age column
#30
boxplot(df$age) # to see the boxplot of the age column
plot(df)
cor(df$age, df$fare, use = "pairwise.complete.obs") # to see the correlation between age and fare
####----- Plotly for interactive plots -----####
install.packages("plotly")
library(plotly)
library(tidyverse)
# Load the data
data("diamonds")
force(diamonds)
library(readxl)
# Load the data
df <- read_excel("data/titanic.xlsx")
View(df)
colnames(df)
# scatter plot
plot_ly(df, x = ~age, y = ~fare, type = "scatter")
# scatter plot
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter")
# scatter plot
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers")
# line plot
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "lines")
# line plot
plot_ly(df, x = ~pclass, y = ~fare, color = ~sex, type = "scatter", mode = "lines")
# line plot
plot_ly(df, x = ~pclass, y = ~embarked, color = ~sex, type = "scatter", mode = "lines")
# bar plot
plot_ly(df, x = ~pclass, y = ~fare, color = ~sex, type = "bar")
#histogram
plot_ly(df, x = ~age, type = "histogram")
#boxplot
plot_ly(df, x = ~pclass, y = ~fare, color = ~sex, type = "box")
#boxplot
plot_ly(df, y = ~fare, type = "box")
#boxplot
plot_ly(df, x = ~pclass, y = ~fare, type = "box")
#boxplot
plot_ly(df, x = ~pclass, y = ~fare, type = "box", color=~who)
#boxplot
plot_ly(df, x = ~pclass, y = ~fare,color=~who, type = "box")
# scatter plot
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers")
# scatter plot
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers",
size = ~fare
)
# heatmap
plot_ly(df, x = ~pclass, y = ~embarked, z = ~fare, type = "heatmap")
# heatmap
plot_ly(df, x = ~class, y = ~embark_town, z = ~fare, type = "heatmap")
# heatmap
plot_ly(df, x = ~class, y = ~embark_town, z = ~age, type = "heatmap")
# heatmap
plot_ly(df, x = ~class, y = ~embark_town, z = ~sex, type = "heatmap")
# heatmap
plot_ly(df, x = ~class, y = ~embark_town, z = ~pclass, type = "heatmap")
# heatmap
plot_ly(df, x = ~class, y = ~embark_town, z = ~age, type = "heatmap")
# pie chart
plot_ly(df, labels = ~sex, type = "pie")
# pie chart
plot_ly(df, labels = ~class, type = "pie")
# pie chart
plot_ly(df, labels = ~class, type = "pie", values = ~fare)
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, size = ~fare, type = "bubble")
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "bubble")
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers",
size = ~fare
)
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers",
size = ~fare * 0.1
)
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers",
size = ~fare * 0.5
)
#bubble chart
plot_ly(df, x = ~age, y = ~fare, color = ~sex, type = "scatter", mode = "markers",
size = ~fare * 2
)
# violin plot
plot_ly(df, x = ~pclass, y = ~fare, color = ~sex, type = "violin")
# violin plot
plot_ly(df, x = ~pclass, y = ~age, color = ~sex, type = "violin")
# violin plot
plot_ly(df, x = ~pclass, y = ~age, ctype = "violin")
# violin plot
plot_ly(df, x = ~pclass, y = ~age, type = "violin")
# 3D scatter plot
plot_ly(df, x = ~age, y = ~fare, z = ~pclass, color = ~sex, type = "scatter3d", mode = "markers")
install.packages("GWalkR")
install.packages("esquisse")
install.packages("explore")
library(tidyverse)
library(GWalkR)
library(esquisse)
library(explore)
library(readxl)
# Load data -----
df_ghgs <- read_excel("data/GHGs.xlsx")
# Load data -----
df_ghgs <- read_excel("./data/GHGs.xlsx")
pwd
getwd()
setwd("C:/Users/aammar/OneDrive/00_SWMP/03_r_training/02_plotting")
getwd()
# Load data -----
df_ghgs <- read_excel("./data/GHGs.xlsx")
# Load data -----
df_ghgs <- read_excel("data/GHGs.xlsx")
# Explore data -----
gwalkr(df_ghgs)
esquisser()
esquisser(viewer = "browser")
explore(df_ghgs)
library(tidyverse)
library(readxl)
# load data
df <- read_excel("data/GHGs.xlsx")
getwd
getwd()
# load data
df <- read_excel("data/GHGs.xlsx")
# load data
df <- read_excel("data/GHGs.xlsx")
# load data
df <- read_excel("data/GHGs.xlsx")
View(df)
# Step 1: Create a table with the counts of each crop type
crop_counts <- table(data$crop.type)
# Step 1: Create a table with the counts of each crop type
crop_counts <- table(df$crop.type)
crop_counts
nrow(df)
# load data
df <- read_excel("data/GHGs.xlsx")
# Step 1: Create a table with the counts of each crop type
crop_counts <- table(df$crop.type)
crop_counts
nrow(df)
# Step 2: Create the pie chart
pie(
crop_counts,
labels = paste(names(crop_counts), round(prop.table(crop_counts) * 100, 1), "%"),
col = c("#ff9999", "#66b3ff", "#99ff99", "#ffcc99", "#c2c2f0", "#ffb3e6", "#c4e17f"),
main = "Crop Distribution"
)
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Crop Distribution") +
scale_fill_manual(values = c("#ff9999", "#66b3ff", "#99ff99", "#ffcc99", "#c2c2f0", "#ffb3e6", "#c4e17f"))
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Crop Distribution") +
scale_fill_manual(values = c("#ff9999", "#66b3ff", "#99ff99", "#ffcc99", "#c2c2f0", "#ffb3e6", "#c4e17f", "red"))
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Crop Distribution")
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1)
# use ggplot2 to create the same piechart
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
# use ggplot2 to create the same piechart
df %>%
count(crop.type)
## libraries
library(tidyverse)
library(readxl)
# load data
df <- read_excel("data/GHGs.xlsx")
# create a piechart of the GHGs$crop_type
# Assuming your data is already in a dataframe named 'data' with a column 'crop.type'
# Step 1: Create a table with the counts of each crop type
crop_counts <- table(df$crop.type)
crop_counts
nrow(df)
# Step 2: Create the pie chart
pie(
crop_counts,
labels = paste(names(crop_counts), round(prop.table(crop_counts) * 100, 1), "%"),
col = c("#ff9999", "#66b3ff", "#99ff99", "#ffcc99", "#c2c2f0", "#ffb3e6", "#c4e17f"),
main = "Crop Distribution"
)
# use ggplot2 to create the same piechart
df %>%
count(crop.type)
df %>%
count(crop.type) %>%
ggplot(aes(x = "", y = n, fill = crop.type)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
# use ggplot2 to create the same piechart
df %>%
count(crop.type)
## libraries
library(tidyverse)
library(readxl)
# load data
df <- read_excel("data/GHGs.xlsx")
# count plot in ggplot2
ggplot(data = df, aes(x="crop.type")) + geom_bar()
# count plot in ggplot2
ggplot(data = df, aes(x="crop.type")) + geom_bar(stat = "identity")
# count plot in ggplot2
ggplot(data = df, aes(x=crop.type)) + geom_bar(stat = "identity")
# count plot in ggplot2
ggplot(data = df, aes(x=crop.type, y = df$crop.type)) + geom_bar(stat = "identity")
# count plot in ggplot2
ggplot(data = df, aes(x=crop.type, y = df$study.id)) + geom_bar(stat = "identity")
df %>%
group_by(crop.type) %>%
summarise(counts = n())
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts)) + geom_bar(stat = "identity")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts)) + geom_bar(stat = "identity") +
geom_tile("Count plot of Crop Type")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts)) + geom_bar(stat = "identity") +
title("X")
?ggplot
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts)) + geom_bar(stat = "identity") +
xlab("Crop Type")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, color = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic()
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
scale_fill_brewer(palette="Dark2")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
scale_fill_brewer(palette="reds")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
scale_fill_brewer(palette="Reds")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
scale_fill_brewer(palette="Accent")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
scale_fill_brewer(palette="Paired")
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "red", "blue", "green", "orange"))
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))+
ggsave("plot.png", scale=1, height = 8, width = 6)
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))+
ggsave("plot.png", scale=1, height = 8, width = 6, dpi = 300)
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))+
ggsave("plot.png", scale=1, height = 8, width = 6, dpi = 600)
df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))+
ggsave("plots/01_plot.png", scale=1, height = 8, width = 6, dpi = 300)
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") + theme_classic() +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))
ggsave(p1, "plots/01_plot.png", scale=1, height = 8, width = 6, dpi = 300)
?ggsave
ggsave("plots/01_plot.png", plot = p1, scale=1, height = 8, width = 6, dpi = 300)
ggsave("plots/01_plot.svg", plot = p1, scale=1, height = 8, width = 6, dpi = 300)
install.packages("svglite")
library(svglite)
ggsave("plots/01_plot.svg", plot = p1, scale=1, height = 8, width = 6, dpi = 300)
axis.text.x = element_text(angle = 90, hjust = 1) +
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, hjust = 1)) +
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"))
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 45, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 25),
axis.text.x = element_text(angle = 45, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 45, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
p1 <- df %>%
group_by(crop.type) %>%
summarise(counts = n()) %>%
ggplot(aes(crop.type, counts, fill = crop.type)) + geom_bar(stat = "identity") +
xlab("Crop Type") + ylab("Number of Observations") +
theme_classic() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1))+
# scale_fill_brewer(palette="Paired") +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#2415ce", "blue", "green", "orange"));p1
